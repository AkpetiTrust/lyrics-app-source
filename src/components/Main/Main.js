import React, { useState, useEffect } from "react";
import style from "./index.module.css";
import Result from "../Result/Result";
import Skeleton from "../Skeleton/Skeleton";

const Main = ({
  activeSongProp,
  extraResults,
  loadingProp,
  onResultClick,
  onLyricsClick,
}) => {
  const [activeSong, setActiveSong] = useState({});
  const [loading, setLoading] = useState(true);
  const [apiKey, setApiKey] = useState(
    "ac46a73f18msh6f5f3b86411baf0p162849jsn3121cc0093e9"
  );

  useEffect(() => {
    if (!activeSongProp?.result?.id) return;

    const options = {
      method: "GET",
      headers: {
        "x-rapidapi-host": "genius.p.rapidapi.com",
        "x-rapidapi-key": apiKey,
      },
    };

    fetch(
      `https://genius.p.rapidapi.com/songs/${activeSongProp.result.id}`,
      options
    )
      .then((response) => response.json())
      .then((result) => {
        setActiveSong(result.response.song);
        setLoading(false);
      });
  }, []);

  if (loading || loadingProp) {
    return <Skeleton />;
  }

  return (
    <section className={style.section_main}>
      <div className={style.top}>
        <div className={style.image_container}>
          <img
            src={activeSong.header_image_thumbnail_url}
            alt={activeSong.full_title}
          />
          <p>{activeSong.full_title}</p>
        </div>
        <div className={style.info_area}>
          <section>
            <span className={style.label}>Artist:</span>
            <span className={style.value}>
              {activeSong.primary_artist.name}
            </span>
          </section>
          <section>
            <span className={style.label}>Released:</span>
            <span className={style.value}>
              {activeSong.release_date_for_display}
            </span>
          </section>
          <section className={style.icons}>
            <a
              href={activeSong?.media[0]?.url}
              target="_blank"
              rel="noopener noreferrer"
            >
              <svg
                width="28"
                height="19"
                viewBox="0 0 28 19"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <g clipPath="url(#clip0)">
                  <path
                    d="M27.3814 2.96347C27.2208 2.39068 26.9075 1.86849 26.4728 1.44889C26.038 1.02928 25.4969 0.72692 24.9034 0.5719C22.7306 0 13.9856 0 13.9856 0C13.9856 0 5.2402 0.0173111 3.06735 0.589211C2.47383 0.744241 1.93275 1.04662 1.49798 1.46624C1.06321 1.88586 0.749941 2.40808 0.589354 2.98089C-0.0678805 6.70679 -0.322834 12.3842 0.607401 15.9611C0.768004 16.5338 1.08129 17.056 1.51605 17.4756C1.95081 17.8952 2.49189 18.1976 3.0854 18.3526C5.25824 18.9245 14.0034 18.9245 14.0034 18.9245C14.0034 18.9245 22.7485 18.9245 24.9212 18.3526C25.5148 18.1976 26.0559 17.8953 26.4907 17.4757C26.9254 17.0561 27.2387 16.5339 27.3994 15.9611C28.0926 12.2299 28.3062 6.55606 27.3814 2.96358V2.96347Z"
                    fill="#FF0000"
                  />
                  <path
                    d="M11.2022 13.5174L18.4569 9.46221L11.2023 5.40697L11.2022 13.5174Z"
                    fill="white"
                  />
                </g>
                <defs>
                  <clipPath id="clip0">
                    <rect width="28" height="19" fill="white" />
                  </clipPath>
                </defs>
              </svg>
            </a>
            <a
              href={activeSong?.apple_music_player_url}
              target="_blank"
              rel="noopener noreferrer"
            >
              <svg
                width="19"
                height="19"
                viewBox="0 0 19 19"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <g clipPath="url(#clip0)">
                  <rect width="19" height="19" rx="5" fill="white" />
                  <path
                    d="M19.0004 4.84837L19.0012 4.77158C19.0012 4.18337 18.9315 3.61179 18.8009 3.06475L18.8112 3.11462C18.5751 2.12211 17.9606 1.26108 17.0988 0.715083L17.083 0.705583C16.6391 0.418211 16.1418 0.223521 15.6208 0.133208L15.597 0.130041C15.1909 0.0589406 14.7798 0.0192397 14.3676 0.0112911H14.3589C14.3272 0.0112911 14.2932 0.00337445 14.2607 0.000999451H4.74092C4.62058 0.00891612 4.50342 0.0144578 4.38071 0.0215828C3.77503 0.0327832 3.17535 0.143786 2.60579 0.350124L2.64458 0.338249C2.14053 0.52924 1.68047 0.820517 1.29225 1.19445C0.904021 1.56839 0.595705 2.01721 0.385957 2.51375L0.376457 2.53987C0.241874 2.86367 0.141332 3.2405 0.0914572 3.63237L0.0890822 3.65454C0.0487072 3.92608 0.0202072 4.24908 0.00991557 4.57683V4.5895C0.00991557 4.61483 0.0043739 4.63858 0.0019989 4.66312V14.3405C0.00991557 14.4513 0.0154572 14.5645 0.0233739 14.6761C0.0392072 15.3577 0.183291 16.0006 0.431874 16.5888L0.419207 16.5547C0.65374 17.0861 1.00212 17.5595 1.43974 17.9415C1.87736 18.3234 2.39352 18.6046 2.95175 18.7651L2.97946 18.7722C3.27792 18.8601 3.62625 18.9242 3.98567 18.9519L4.00308 18.9527C4.44246 18.9947 4.88183 19.0002 5.32279 19.0002H14.0533C14.4919 19.0002 14.9233 18.9709 15.3461 18.9155L15.2962 18.921C15.9512 18.8506 16.5806 18.6274 17.1337 18.2695L17.117 18.2798C17.765 17.8595 18.2781 17.2614 18.5951 16.5571L18.6054 16.5318C18.7368 16.2286 18.8389 15.8755 18.8951 15.5082L18.8983 15.4836C18.9791 14.9466 19.0132 14.4036 19.0004 13.8607V4.85075V4.84837ZM13.9147 8.00712V12.5291L13.9155 12.5948C13.9155 12.917 13.8443 13.2234 13.716 13.4973L13.7216 13.4839C13.6162 13.7035 13.4644 13.8977 13.2768 14.0531C13.0892 14.2085 12.8701 14.3214 12.6346 14.384L12.6227 14.3864C12.3495 14.4655 12.0678 14.5115 11.7836 14.5233H11.7757C11.7527 14.5249 11.7266 14.5249 11.6997 14.5249C11.3641 14.5252 11.0384 14.4116 10.7758 14.2026C10.5133 13.9936 10.3295 13.7017 10.2545 13.3746C10.1796 13.0475 10.2179 12.7047 10.3632 12.4022C10.5085 12.0998 10.7523 11.8556 11.0545 11.7097L11.0632 11.7058C11.2951 11.595 11.5659 11.5063 11.8477 11.4525L11.8691 11.4493C12.1683 11.3844 12.4692 11.3282 12.7668 11.2593C12.8681 11.2423 12.9615 11.1939 13.0339 11.1211C13.1064 11.0482 13.1541 10.9546 13.1706 10.8532V10.8508C13.1814 10.8017 13.1867 10.7515 13.1864 10.7012V10.6972V6.38817C13.1859 6.33731 13.1787 6.28675 13.165 6.23775L13.1658 6.24171C13.1552 6.18725 13.1252 6.13848 13.0814 6.10442C13.0376 6.07036 12.9829 6.05333 12.9275 6.05646H12.9283C12.7874 6.06675 12.6592 6.08496 12.5333 6.11187L12.5523 6.10871C11.9506 6.22746 11.349 6.34779 10.7473 6.46971L7.81812 7.06187C7.80546 7.06187 7.79279 7.06979 7.78012 7.07217C7.68823 7.08444 7.60468 7.13191 7.54709 7.20456C7.4895 7.27722 7.46235 7.36939 7.47137 7.46167V7.46008V13.7388L7.47217 13.814C7.47217 14.137 7.40962 14.445 7.29483 14.726L7.30037 14.7094C7.19872 14.9487 7.04328 15.1614 6.84613 15.331C6.64898 15.5005 6.4154 15.6224 6.16354 15.6871L6.15167 15.6895C5.87693 15.7701 5.59313 15.8159 5.30696 15.8256H5.30062C4.94238 15.846 4.58923 15.7334 4.30888 15.5094C4.02853 15.2854 3.84071 14.9659 3.78142 14.612L3.78062 14.6033C3.71881 14.2677 3.775 13.9211 3.93964 13.6223C4.10429 13.3235 4.36725 13.0908 4.68392 12.9637L4.69421 12.9606C4.96849 12.8525 5.25275 12.7716 5.54287 12.7191L5.57137 12.7152C5.79858 12.6677 6.02658 12.6233 6.25221 12.575C6.38412 12.556 6.50476 12.4901 6.592 12.3893C6.67924 12.2885 6.72724 12.1597 6.72721 12.0264V12.009V12.0098V11.891V4.85867V4.85312C6.72721 4.751 6.73908 4.65204 6.76204 4.55704L6.76046 4.56575C6.78551 4.46372 6.83922 4.37098 6.91525 4.29846C6.99127 4.22594 7.08644 4.17667 7.18954 4.15646L7.19271 4.15567C7.39458 4.10342 7.60042 4.067 7.80546 4.02504C8.38575 3.90629 8.96604 3.78754 9.54712 3.67354L11.3442 3.30937C11.8746 3.20329 12.405 3.09562 12.9355 2.99271C13.0787 2.95946 13.2577 2.93017 13.4397 2.91037L13.4611 2.90879C13.5155 2.902 13.5707 2.90674 13.6231 2.92269C13.6755 2.93864 13.724 2.96545 13.7653 3.00137C13.8067 3.03729 13.8401 3.08151 13.8632 3.13117C13.8864 3.18083 13.8988 3.2348 13.8997 3.28958C13.906 3.34262 13.9092 3.40358 13.9092 3.46533V8.00396L13.9147 8.00712Z"
                    fill="#FB445F"
                  />
                </g>
                <defs>
                  <clipPath id="clip0">
                    <rect width="19" height="19" rx="5" fill="white" />
                  </clipPath>
                </defs>
              </svg>
            </a>
            <button onClick={onLyricsClick}>LYRICS</button>
          </section>
        </div>
      </div>
      <div className={style.bottom}>
        <p>More Results:</p>
        <div className={style.results_container}>
          {extraResults.map((result) => (
            <Result
              song={result}
              key={result.result.id}
              onResultClick={onResultClick}
            />
          ))}
        </div>
      </div>
    </section>
  );
};

export default Main;
